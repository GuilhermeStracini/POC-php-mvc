name: Deploy via ftp

on:
  push:
    branches: main
  workflow_dispatch:

concurrency:
  group: build-deploy

jobs:
  deploy:
    name: Deploy to FTP
    runs-on: ubuntu-latest
    outputs:
      semVer: ${{ steps.gitversion.outputs.semVer }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v4
        with:
          versionSpec: "6.x"

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v4

      - name: Generate dist
        run: |
          mkdir -p poc-php-mvc
          cp -r app poc-php-mvc/app
          cp -r public poc-php-mvc/public
          cp -r src poc-php-mvc/src
          mv .htaccess-prod poc-php-mvc/.htaccess
          mv composer.json poc-php-mvc/composer.json
          mv composer.lock poc-php-mvc/composer.lock
      
      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}

      - name: Install dependencies
        uses: "php-actions/composer@v6"
        with:
          php_extensions: sockets
          dev: no
          progress: yes
          working_dir: "./poc-php-mvc/"

      - name: Upload service
        uses: sebastianpopp/ftp-action@releases/v2
        with:
          host: ${{ secrets.FTP_SERVER }}
          user: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          localDir: "poc-php-mvc"
          remoteDir: "/"
          options: "--delete"

  create_release:
    name: Create release
    needs: deploy
    env:
      SEMVER: ${{ needs.deploy.outputs.semVer }}
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        uses: ncipollo/release-action@v1.18.0
        with:
          allowUpdates: false
          skipIfReleaseExists: true
          draft: false
          makeLatest: true
          tag: v${{ env.SEMVER }}
          name: Release v${{ env.SEMVER }}
          generateReleaseNotes: true
          body: Release ${{ env.SEMVER }} of ${{ github.event.repository.name }}
